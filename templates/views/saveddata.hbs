<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="Manoj Kumar, Pride Aquaculture">
    <meta name="description" content="View and manage user data, including tank details and environmental metrics. Features include search functionality and PDF export for selected date ranges.">
    <meta name="keywords" content="user data, data table, tank monitoring, environmental metrics, PDF export, search functionality">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="style1.css">

    <title>User Data Table</title>

    {{>navbar}}


</head>

<body background="Untitled-4 copy.jpg">


    <div class="tableses">
        <div class="savetitle">
            <h2>Daily Data Monitoring</h2>
        </div>
        <div class="dailydata">
            <a href="dailydata" class="daily_data"><i class="fa-solid fa-plus"></i> Daily Data </a>
        </div>

        <div class="savecontainer">
            <div class="user-details">
                <table id="myTable">
                    <thead class="sticky">
                        <tr>
                            <th>Tank No.</th>
                            <th>Date</th>
                            <th>Time</th>
                            <th>pH</th>
                            <th>Temperature</th>
                            <th>Do</th>
                            <th>Nitrate</th>
                            <th>Nitrite</th>
                            <th>Ammonia</th>
                            <th>Edit/Delete</th>

                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        {{#if searchData}} <!-- Check if search results are available -->
                        {{#each searchData}}
                        <tr>
                            <td>{{this.tank}}</td>
                            <td>{{formattedDate}}</td>
                            <td>{{this.time}}</td>
                            <td>{{this.ph}}</td>
                            <td>{{this.temperature}}</td>
                            <td>{{this.dissolvedoxygen}}</td>
                            <td>{{this.nitrate}}</td>
                            <td>{{this.nitrite}}</td>
                            <td>{{this.ammonia}}</td>
                            <td>
                                <div class="d-flex flex-row justify-content-end gap-2">
                                    <div class="d-flex flex-row justify-content-end gap-2">
                                        <!-- Edit Button -->
                                        <a href="/edit/{{this._id}}" class="edit-btn"><i class="fa fa-edit"></i></a>/
                                        <!-- Delete Button -->
                                        <a href="javascript:void(0);" onclick="deleteTank('{{this._id}}');"
                                            class="delete-btn" type="button">
                                            <i class="fa fa-trash"></i>
                                        </a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        {{/each}}
                        {{else}}
                        {{#each data}}
                        <tr>
                            <td>{{this.tank}}</td>
                            <td>{{formattedDate}}</td>
                            <td>{{this.time}}</td>
                            <td>{{this.ph}}</td>
                            <td>{{this.temperature}}</td>
                            <td>{{this.dissolvedoxygen}}</td>
                            <td>{{this.nitrate}}</td>
                            <td>{{this.nitrite}}</td>
                            <td>{{this.ammonia}}</td>
                            <td>
                                <div class="d-flex flex-row justify-content-end gap-2">
                                    <div class="d-flex flex-row justify-content-end gap-2">
                                        <!-- Edit Button -->
                                        <a href="/edit/{{this._id}}" class="edit-btn"><i class="fa fa-edit"></i></a>/
                                        <!-- Delete Button -->
                                        <a href="javascript:void(0);" onclick="deleteTank('{{this._id}}');"
                                            class="delete-btn" type="button">
                                            <i class="fa fa-trash"></i>

                                    </div>
                                </div>
                            </td>
                        </tr>
                        {{/each}}
                        {{/if}}
                    </tbody>
                </table>
            </div>
        </div>
        <div class="bottom-controls">
            <form class="searchform" method="POST" action="/search" novalidate>
                <input class="searchbydate" type="date" name="searchDate" aria-label="Search by Date">
                <button class="searchsubmit" type="submit">Search <i class="fa-brands fa-searchengin"></i></button>
                <div class="buttons">
                    <input class="searchbydate" type="date" id="startDate" name="startDate" aria-label="Start Date">
                    <input class="searchbydate" type="date" id="endDate" name="endDate" aria-label="End Date">
                    <button id="downloadPDFRange" class="pdf-btn" type="button">Download <i
                            class="fa-solid fa-file-pdf"></i></button>
                </div>
            </form>
        </div>
    </div>

    </div>

    <script>
        function parseDate(dateString) {
            const [day, month, year] = dateString.split('/');
            return new Date(year, month - 1, day);
        }

        function normalizeDate(date) {
            const normalizedDate = new Date(date);
            normalizedDate.setHours(0, 0, 0, 0);
            return normalizedDate;
        }


        function deleteTank(id) {
            if (confirm('Are you sure you want to delete this tank?')) {
                fetch(`/delete/${id}`, {
                    method: 'DELETE',
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload();
                        } else {
                            alert('Failed to delete the tank.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while deleting the tank.');
                    });
            }
        }


        document.getElementById('downloadPDFRange').addEventListener('click', function () {
            const startDateInput = document.getElementById('startDate').value;
            const endDateInput = document.getElementById('endDate').value;

            if (!startDateInput || !endDateInput) {
                alert('Please select valid start and end dates.');
                return;
            }

            const startDate = normalizeDate(new Date(startDateInput));
            const endDate = normalizeDate(new Date(endDateInput));

        

            if (isNaN(startDate) || isNaN(endDate)) {
                alert('Please select valid start and end dates.');
                return;
            }

            const table = document.getElementById('myTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
            const filteredRows = [];

            for (let i = 0; i < rows.length; i++) {
                const dateCell = rows[i].getElementsByTagName('td')[1];
                if (dateCell) {
                    const dateText = dateCell.textContent;
                    const rowDate = normalizeDate(parseDate(dateText));

                    console.log(`Row ${i} Date: ${rowDate} (${dateText})`);

                    if (rowDate >= startDate && rowDate <= endDate) {
                        filteredRows.push(rows[i]);
                    }
                }
            }

            
            generatePDF(filteredRows);
        });

        function generatePDF(filteredRows) {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            const tableData = filteredRows.map(row => {
                const cells = Array.from(row.getElementsByTagName('td'));
                return cells.map(cell => cell.textContent);
            });

            

            if (tableData.length === 0) {
                alert('No data available for the selected date range.');
                return;
            }

            doc.autoTable({
                head: [['Tank No.', 'Date', 'Time', 'pH', 'Temperature', 'DO', 'Nitrate', 'Nitrite', 'Ammonia']],
                body: tableData
            });

            const today = new Date();
            const formattedDate = `${today.getDate().toString().padStart(2, '0')}-${(today.getMonth() + 1).toString().padStart(2, '0')}-${today.getFullYear()}`;
            doc.save(`table-${formattedDate}.pdf`);

        }


    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.14/jspdf.plugin.autotable.min.js"></script>



</body>


</html>